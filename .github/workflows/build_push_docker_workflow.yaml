name: Build and Push Docker

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          secrets: |
            "DB_HOST=${{ secrets.DB_HOST }}"
            "DB_USER=${{ secrets.DB_USER }}"
            "DB_PASSWORD=${{ secrets.DB_PASSWORD }}"
            "DB_NAME=${{ secrets.DB_NAME }}"
            "PORT=${{ secrets.SERVER_PORT }}"
            "ACCESS_KEY_ID=${{ secrets.ACCESS_KEY_ID }}"
            "SECRET_ACCESS_KEY=${{ secrets.SECRET_ACCESS_KEY }}"
            "REGION=${{ secrets.REGION }}"
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/sound-crate:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/sound-crate:latest

  redeploy:
    needs: build
    runs-on: ubuntu-20.04

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker Pull and Run from EC2
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 400 private_key
          ssh -o StrictHostKeyChecking=no -i "private_key" ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '

            sudo docker ps -aq | sudo xargs docker stop | sudo xargs docker rm &&
            sudo docker image prune -af &&
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/sound-crate &&
            sudo docker run -dp 3000:3000 ${{ secrets.DOCKERHUB_USERNAME }}/sound-crate
          '
